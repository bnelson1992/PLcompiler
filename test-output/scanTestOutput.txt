TOKEN TYPE: RESERVED WORD begin
TOKEN TYPE: RESERVED WORD end
TOKEN TYPE: RESERVED WORD const
TOKEN TYPE: RESERVED WORD array
TOKEN TYPE: RESERVED WORD integer
TOKEN TYPE: RESERVED WORD Boolean
TOKEN TYPE: RESERVED WORD proc
TOKEN TYPE: RESERVED WORD skip
TOKEN TYPE: RESERVED WORD read
TOKEN TYPE: RESERVED WORD write
TOKEN TYPE: RESERVED WORD call
TOKEN TYPE: RESERVED WORD if
TOKEN TYPE: RESERVED WORD fi
TOKEN TYPE: RESERVED WORD do
TOKEN TYPE: RESERVED WORD od
TOKEN TYPE: RESERVED WORD false
TOKEN TYPE: RESERVED WORD true
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   200 - LEXEME: ident_1234
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   231 - LEXEME: abcdefghij
TOKEN TYPE: NUM - TOKEN ATTRIBUTES - VALUE: 12345
TOKEN TYPE: OPERATOR .
TOKEN TYPE: OPERATOR ,
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: OPERATOR [
TOKEN TYPE: OPERATOR ]
TOKEN TYPE: OPERATOR &
TOKEN TYPE: OPERATOR |
TOKEN TYPE: OPERATOR ~
TOKEN TYPE: OPERATOR <
TOKEN TYPE: OPERATOR =
TOKEN TYPE: OPERATOR >
TOKEN TYPE: OPERATOR +
TOKEN TYPE: OPERATOR -
TOKEN TYPE: OPERATOR *
TOKEN TYPE: OPERATOR /
TOKEN TYPE: OPERATOR \
TOKEN TYPE: OPERATOR (
TOKEN TYPE: OPERATOR )
TOKEN TYPE: OPERATOR :=
TOKEN TYPE: OPERATOR []
TOKEN TYPE: OPERATOR ->
