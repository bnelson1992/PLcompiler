TOKEN TYPE: RESERVED WORD begin
TOKEN TYPE: RESERVED WORD const
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   110 - LEXEME: n
TOKEN TYPE: OPERATOR =
TOKEN TYPE: NUM - TOKEN ATTRIBUTES - VALUE:    10
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD integer
TOKEN TYPE: RESERVED WORD array
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:    65 - LEXEME: A
TOKEN TYPE: OPERATOR [
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   110 - LEXEME: n
TOKEN TYPE: OPERATOR ]
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD integer
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   120 - LEXEME: x
TOKEN TYPE: OPERATOR ,
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD Boolean
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:    77 - LEXEME: found
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD proc
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   302 - LEXEME: Search
TOKEN TYPE: RESERVED WORD begin
TOKEN TYPE: RESERVED WORD integer
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   109 - LEXEME: m
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR ,
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   109 - LEXEME: m
TOKEN TYPE: OPERATOR :=
TOKEN TYPE: NUM - TOKEN ATTRIBUTES - VALUE:     1
TOKEN TYPE: OPERATOR ,
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   110 - LEXEME: n
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD do
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR <
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   109 - LEXEME: m
TOKEN TYPE: OPERATOR ->
TOKEN TYPE: RESERVED WORD if
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:    65 - LEXEME: A
TOKEN TYPE: OPERATOR [
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR ]
TOKEN TYPE: OPERATOR =
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   120 - LEXEME: x
TOKEN TYPE: OPERATOR ->
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   109 - LEXEME: m
TOKEN TYPE: OPERATOR :=
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: OPERATOR []
TOKEN TYPE: OPERATOR ~
TOKEN TYPE: OPERATOR (
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:    65 - LEXEME: A
TOKEN TYPE: OPERATOR [
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR ]
TOKEN TYPE: OPERATOR =
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   120 - LEXEME: x
TOKEN TYPE: OPERATOR )
TOKEN TYPE: OPERATOR ->
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR :=
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR +
TOKEN TYPE: NUM - TOKEN ATTRIBUTES - VALUE:     1
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD fi
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD od
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:    77 - LEXEME: found
TOKEN TYPE: OPERATOR :=
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:    65 - LEXEME: A
TOKEN TYPE: OPERATOR [
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR ]
TOKEN TYPE: OPERATOR =
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   120 - LEXEME: x
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD end
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR :=
TOKEN TYPE: NUM - TOKEN ATTRIBUTES - VALUE:     1
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD do
TOKEN TYPE: OPERATOR ~
TOKEN TYPE: OPERATOR (
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR >
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   110 - LEXEME: n
TOKEN TYPE: OPERATOR )
TOKEN TYPE: OPERATOR ->
TOKEN TYPE: RESERVED WORD read
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:    65 - LEXEME: A
TOKEN TYPE: OPERATOR [
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR ]
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR :=
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR +
TOKEN TYPE: NUM - TOKEN ATTRIBUTES - VALUE:     1
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD od
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD read
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   120 - LEXEME: x
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD do
TOKEN TYPE: OPERATOR ~
TOKEN TYPE: OPERATOR (
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   120 - LEXEME: x
TOKEN TYPE: OPERATOR =
TOKEN TYPE: NUM - TOKEN ATTRIBUTES - VALUE:     0
TOKEN TYPE: OPERATOR )
TOKEN TYPE: OPERATOR ->
TOKEN TYPE: RESERVED WORD call
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   302 - LEXEME: Search
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD if
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:    77 - LEXEME: found
TOKEN TYPE: OPERATOR ->
TOKEN TYPE: RESERVED WORD write
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   120 - LEXEME: x
TOKEN TYPE: OPERATOR ,
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   105 - LEXEME: i
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: OPERATOR []
TOKEN TYPE: OPERATOR ~
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:    77 - LEXEME: found
TOKEN TYPE: OPERATOR ->
TOKEN TYPE: RESERVED WORD write
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   120 - LEXEME: x
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD fi
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD read
TOKEN TYPE: ID  - TOKEN ATTRIBUTES - INDEX:   120 - LEXEME: x
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD od
TOKEN TYPE: OPERATOR ;
TOKEN TYPE: RESERVED WORD end
TOKEN TYPE: OPERATOR .
